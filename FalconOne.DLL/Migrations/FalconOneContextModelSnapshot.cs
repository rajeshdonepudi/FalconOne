// <auto-generated />
using System;
using FalconOne.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FalconOne.DAL.Migrations
{
    [DbContext(typeof(FalconOneContext))]
    partial class FalconOneContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FalconOne.DAL.Entities.ApplicationClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ApplicationPolicyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationPolicyId");

                    b.HasIndex("TenantId");

                    b.ToTable("ApplicationClaims");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c1f09df3-5590-4ee8-9b8c-d0315369a7af"),
                            ApplicationPolicyId = new Guid("b7538a53-d3b2-4b66-ba40-97619cda8d00"),
                            CreatedOn = new DateTime(2023, 5, 12, 17, 7, 45, 775, DateTimeKind.Utc).AddTicks(4605),
                            Description = "Database seeded",
                            TenantId = new Guid("dab7ed0b-ff59-40a8-8809-df1703ee87fe"),
                            Type = "Admin",
                            Value = "Everything"
                        },
                        new
                        {
                            Id = new Guid("1724d756-5ff0-426e-afc2-42edfe831563"),
                            ApplicationPolicyId = new Guid("9fa14d9e-0d8e-4b51-85e4-c4bdd5873d14"),
                            CreatedOn = new DateTime(2023, 5, 12, 17, 7, 45, 775, DateTimeKind.Utc).AddTicks(4643),
                            Description = "Database seeded",
                            TenantId = new Guid("dab7ed0b-ff59-40a8-8809-df1703ee87fe"),
                            Type = "User",
                            Value = "BasicThings"
                        });
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.ApplicationPolicy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("ApplicationPolicies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9fa14d9e-0d8e-4b51-85e4-c4bdd5873d14"),
                            CreatedOn = new DateTime(2023, 5, 12, 17, 7, 45, 775, DateTimeKind.Utc).AddTicks(4574),
                            Name = "User",
                            TenantId = new Guid("dab7ed0b-ff59-40a8-8809-df1703ee87fe")
                        },
                        new
                        {
                            Id = new Guid("b7538a53-d3b2-4b66-ba40-97619cda8d00"),
                            CreatedOn = new DateTime(2023, 5, 12, 17, 7, 45, 775, DateTimeKind.Utc).AddTicks(4579),
                            Name = "Admin",
                            TenantId = new Guid("dab7ed0b-ff59-40a8-8809-df1703ee87fe")
                        });
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.ApplicationSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SettingType")
                        .HasColumnType("int");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("ApplicationSettings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7cf2a6d9-d7d3-4d27-937a-a78797686ade"),
                            CreatedOn = new DateTime(2023, 5, 12, 17, 7, 45, 775, DateTimeKind.Utc).AddTicks(4836),
                            Description = "This is primary color",
                            Name = "primaryColor",
                            SettingType = 1,
                            TenantId = new Guid("dab7ed0b-ff59-40a8-8809-df1703ee87fe"),
                            Value = "#144272"
                        },
                        new
                        {
                            Id = new Guid("81fcdd91-cc2a-4398-9aaf-04dfcb77f0ba"),
                            CreatedOn = new DateTime(2023, 5, 12, 17, 7, 45, 775, DateTimeKind.Utc).AddTicks(4851),
                            Description = "This is secondary color",
                            Name = "secondaryColor",
                            SettingType = 1,
                            TenantId = new Guid("dab7ed0b-ff59-40a8-8809-df1703ee87fe"),
                            Value = "#205295"
                        },
                        new
                        {
                            Id = new Guid("36819f29-c241-43c3-9a38-7b7247c8ca49"),
                            CreatedOn = new DateTime(2023, 5, 12, 17, 7, 45, 775, DateTimeKind.Utc).AddTicks(4864),
                            Description = "This is site theme",
                            Name = "theme",
                            SettingType = 1,
                            TenantId = new Guid("dab7ed0b-ff59-40a8-8809-df1703ee87fe"),
                            Value = "light"
                        });
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommentedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CommentedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CommentedById");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProfilePictureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("ProfilePictureId");

                    b.HasIndex("TenantId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("064f1d3c-bd07-40c3-84ba-551bef0574b9"),
                            CreatedOn = new DateTime(2023, 5, 12, 17, 7, 45, 757, DateTimeKind.Utc).AddTicks(3147),
                            LocationId = new Guid("9d2cb6e8-8c9f-426d-91cc-e56c6567270d"),
                            Name = "Development",
                            TenantId = new Guid("dab7ed0b-ff59-40a8-8809-df1703ee87fe")
                        });
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9d2cb6e8-8c9f-426d-91cc-e56c6567270d"),
                            Latitude = "78.4867° E",
                            Longitude = "17.3850° N",
                            Name = "Hyderabad"
                        });
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.Navigation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationClaimId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationClaimId");

                    b.HasIndex("TenantId");

                    b.ToTable("Navigation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c60f6154-6262-4dcf-8646-a8f4098af063"),
                            ApplicationClaimId = new Guid("c1f09df3-5590-4ee8-9b8c-d0315369a7af"),
                            CreatedOn = new DateTime(2023, 5, 12, 17, 7, 45, 775, DateTimeKind.Utc).AddTicks(4670),
                            Description = "User login",
                            Name = "Login",
                            TenantId = new Guid("dab7ed0b-ff59-40a8-8809-df1703ee87fe"),
                            URL = "login"
                        },
                        new
                        {
                            Id = new Guid("42f471c0-e102-4d5b-8eb8-49a796c7d8f5"),
                            ApplicationClaimId = new Guid("c1f09df3-5590-4ee8-9b8c-d0315369a7af"),
                            CreatedOn = new DateTime(2023, 5, 12, 17, 7, 45, 775, DateTimeKind.Utc).AddTicks(4673),
                            Description = "User signup",
                            Name = "Singup",
                            TenantId = new Guid("dab7ed0b-ff59-40a8-8809-df1703ee87fe"),
                            URL = "signup"
                        });
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PostedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PostedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PostedById");

                    b.HasIndex("TenantId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.Reaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReactedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ReactionOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReactionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("ReactedById");

                    b.ToTable("Reactions");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.RequestInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Controller")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("Protocol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecordedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResourceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scheme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TraceIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("RequestInformations");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProfilePictureId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("ProfilePictureId");

                    b.ToTable("Tenants");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dab7ed0b-ff59-40a8-8809-df1703ee87fe"),
                            CreatedOn = new DateTime(2023, 5, 12, 17, 7, 45, 757, DateTimeKind.Utc).AddTicks(3106),
                            Host = "localhost",
                            LocationId = new Guid("9d2cb6e8-8c9f-426d-91cc-e56c6567270d"),
                            Name = "development"
                        });
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.TimeEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayType")
                        .HasColumnType("int");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("UserId");

                    b.ToTable("AttendanceLogs");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.TimeLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AttendanceLogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("In")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Out")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AttendanceLogId");

                    b.ToTable("TimeLogs");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProfilePictureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProfilePictureId");

                    b.HasIndex("TenantId");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6521474a-6e39-4a5e-8628-cd89b4e922bc"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "AQAAAAEAACcQAAAAEP/x170yyX0uuRQdVFBRYelz5uo6tu1qjpJDWgKx9P0SHMyDKSl4vbXASElX+1GzDA==",
                            CreatedOn = new DateTime(2023, 5, 12, 17, 7, 45, 757, DateTimeKind.Utc).AddTicks(3233),
                            DepartmentId = new Guid("064f1d3c-bd07-40c3-84ba-551bef0574b9"),
                            Email = "b@b.com",
                            EmailConfirmed = true,
                            FirstName = "Basic",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "b@b.com",
                            NormalizedUserName = "b",
                            PasswordHash = "AQAAAAEAACcQAAAAEF51eZUR+thrfLc/JyDcSMLNNnmjgTYFIEWtzySWwNfJkyARgKqCaIGQVMElrxU8vQ==",
                            PhoneNumber = "8886014996",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "UCQO32XEFNXIAZIR3LTNFDRRX7A2NHLK",
                            TenantId = new Guid("dab7ed0b-ff59-40a8-8809-df1703ee87fe"),
                            TwoFactorEnabled = false,
                            UserName = "basicuser01"
                        },
                        new
                        {
                            Id = new Guid("5090b588-6e3f-464a-994d-9cd2af4a0198"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "AQAAAAEAACcQAAAAEP/x170yyX0uuRQdVFBRYelz5uo6tu1qjpJDWgKx9P0SHMyDKSl4vbXASElX+1GzDA==",
                            CreatedOn = new DateTime(2023, 5, 12, 17, 7, 45, 757, DateTimeKind.Utc).AddTicks(3238),
                            DepartmentId = new Guid("064f1d3c-bd07-40c3-84ba-551bef0574b9"),
                            Email = "a@a.com",
                            EmailConfirmed = true,
                            FirstName = "Admin",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "a@a.com",
                            NormalizedUserName = "a",
                            PasswordHash = "AQAAAAEAACcQAAAAEH6XGA+onsB9ByG+Aw8AsAdx+Baxksr2sNFQ2DrRnr3aXKnYlWdK6cp6A96IhRGAgg==",
                            PhoneNumber = "8886014997",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "UCQO32XEFNXIAZIR3LTNFDRRX7A2NHLK",
                            TenantId = new Guid("dab7ed0b-ff59-40a8-8809-df1703ee87fe"),
                            TwoFactorEnabled = false,
                            UserName = "adminuser01"
                        });
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.HasIndex("TenantId");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "Admin",
                            ClaimValue = "Everything",
                            UserId = new Guid("5090b588-6e3f-464a-994d-9cd2af4a0198")
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "User",
                            ClaimValue = "BasicThings",
                            UserId = new Guid("6521474a-6e39-4a5e-8628-cd89b4e922bc")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Name")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.ApplicationClaim", b =>
                {
                    b.HasOne("FalconOne.DAL.Entities.ApplicationPolicy", "ApplicationPolicy")
                        .WithMany("PolicyClaims")
                        .HasForeignKey("ApplicationPolicyId");

                    b.HasOne("FalconOne.DAL.Entities.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("ApplicationPolicy");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.ApplicationPolicy", b =>
                {
                    b.HasOne("FalconOne.DAL.Entities.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.ApplicationSetting", b =>
                {
                    b.HasOne("FalconOne.DAL.Entities.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.Comment", b =>
                {
                    b.HasOne("FalconOne.DAL.Entities.User", "CommentedBy")
                        .WithMany()
                        .HasForeignKey("CommentedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FalconOne.DAL.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId");

                    b.Navigation("CommentedBy");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.Department", b =>
                {
                    b.HasOne("FalconOne.DAL.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FalconOne.DAL.Entities.Image", "ProfilePicture")
                        .WithMany()
                        .HasForeignKey("ProfilePictureId");

                    b.HasOne("FalconOne.DAL.Entities.Tenant", "Tenant")
                        .WithMany("Departments")
                        .HasForeignKey("TenantId");

                    b.Navigation("Location");

                    b.Navigation("ProfilePicture");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.Image", b =>
                {
                    b.HasOne("FalconOne.DAL.Entities.Post", "Post")
                        .WithMany("Images")
                        .HasForeignKey("PostId");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.Navigation", b =>
                {
                    b.HasOne("FalconOne.DAL.Entities.ApplicationClaim", "ApplicationClaim")
                        .WithMany("Navigations")
                        .HasForeignKey("ApplicationClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FalconOne.DAL.Entities.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("ApplicationClaim");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.Post", b =>
                {
                    b.HasOne("FalconOne.DAL.Entities.Department", "Department")
                        .WithMany("Posts")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("FalconOne.DAL.Entities.User", "PostedBy")
                        .WithMany()
                        .HasForeignKey("PostedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FalconOne.DAL.Entities.Tenant", "Tenant")
                        .WithMany("Posts")
                        .HasForeignKey("TenantId");

                    b.Navigation("Department");

                    b.Navigation("PostedBy");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.Reaction", b =>
                {
                    b.HasOne("FalconOne.DAL.Entities.Post", "Post")
                        .WithMany("Reactions")
                        .HasForeignKey("PostId");

                    b.HasOne("FalconOne.DAL.Entities.User", "ReactedBy")
                        .WithMany()
                        .HasForeignKey("ReactedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("ReactedBy");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.RequestInformation", b =>
                {
                    b.HasOne("FalconOne.DAL.Entities.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.Tenant", b =>
                {
                    b.HasOne("FalconOne.DAL.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FalconOne.DAL.Entities.Image", "ProfilePicture")
                        .WithMany()
                        .HasForeignKey("ProfilePictureId");

                    b.Navigation("Location");

                    b.Navigation("ProfilePicture");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.TimeEntry", b =>
                {
                    b.HasOne("FalconOne.DAL.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("FalconOne.DAL.Entities.User", "User")
                        .WithMany("TimeEntries")
                        .HasForeignKey("UserId");

                    b.Navigation("Location");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.TimeLog", b =>
                {
                    b.HasOne("FalconOne.DAL.Entities.TimeEntry", "AttendanceLog")
                        .WithMany("TimeLogs")
                        .HasForeignKey("AttendanceLogId");

                    b.Navigation("AttendanceLog");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.User", b =>
                {
                    b.HasOne("FalconOne.DAL.Entities.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("FalconOne.DAL.Entities.Image", "ProfilePicture")
                        .WithMany()
                        .HasForeignKey("ProfilePictureId");

                    b.HasOne("FalconOne.DAL.Entities.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.OwnsMany("FalconOne.DAL.Entities.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"), 1L, 1);

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedByIp")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("Expires")
                                .HasColumnType("datetime2");

                            b1.Property<string>("ReasonRevoked")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ReplacedByToken")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("Revoked")
                                .HasColumnType("datetime2");

                            b1.Property<string>("RevokedByIp")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Token")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id");

                            b1.HasIndex("UserId");

                            b1.ToTable("RefreshTokens");

                            b1.WithOwner("User")
                                .HasForeignKey("UserId");

                            b1.Navigation("User");
                        });

                    b.Navigation("Department");

                    b.Navigation("ProfilePicture");

                    b.Navigation("RefreshTokens");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.UserRole", b =>
                {
                    b.HasOne("FalconOne.DAL.Entities.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("FalconOne.DAL.Entities.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("FalconOne.DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("FalconOne.DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("FalconOne.DAL.Entities.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FalconOne.DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("FalconOne.DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.ApplicationClaim", b =>
                {
                    b.Navigation("Navigations");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.ApplicationPolicy", b =>
                {
                    b.Navigation("PolicyClaims");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.Department", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("Reactions");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.Tenant", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.TimeEntry", b =>
                {
                    b.Navigation("TimeLogs");
                });

            modelBuilder.Entity("FalconOne.DAL.Entities.User", b =>
                {
                    b.Navigation("TimeEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
